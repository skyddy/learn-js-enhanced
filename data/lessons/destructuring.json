{
  "id": "destructuring",
  "title": "Destructuring Assignment",
  "description": "Master the destructuring assignment syntax in modern JavaScript",
  "content": "# Destructuring Assignment in JavaScript\n\nDestructuring assignment is a JavaScript expression that makes it possible to unpack values from arrays, or properties from objects, into distinct variables.\n\n## Array Destructuring\n\n```javascript\nconst [a, b] = [1, 2];\n// a = 1, b = 2\n\nconst [first, ...rest] = [1, 2, 3, 4];\n// first = 1, rest = [2, 3, 4]\n```\n\n## Object Destructuring\n\n```javascript\nconst { name, age } = { name: 'John', age: 30 };\n// name = 'John', age = 30\n\nconst { name: userName } = { name: 'John' };\n// userName = 'John'\n```\n\n## Default Values\n\n```javascript\nconst [a = 5] = [];\n// a = 5\n\nconst { name = 'Anonymous' } = {};\n// name = 'Anonymous'\n```\n\nTry the interactive example below to practice destructuring!",
  "code": {
    "html": "<div class=\"container\">\n  <div id=\"output\" class=\"output\"></div>\n  <button id=\"runBtn\">Run Examples</button>\n</div>",
    "css": ".container {\n  padding: 2rem;\n}\n\n.output {\n  font-family: monospace;\n  white-space: pre;\n  padding: 1rem;\n  background: #f5f5f5;\n  border-radius: 4px;\n  margin-bottom: 1rem;\n  min-height: 200px;\n}\n\nbutton {\n  padding: 0.5rem 1rem;\n  background: #007bff;\n  color: white;\n  border: none;\n  border-radius: 4px;\n  cursor: pointer;\n}",
    "js": "// Sample data\nconst person = {\n  name: 'Alice Johnson',\n  age: 28,\n  job: 'Developer',\n  address: {\n    city: 'San Francisco',\n    country: 'USA'\n  },\n  skills: ['JavaScript', 'React', 'Node.js']\n};\n\nconst numbers = [1, 2, 3, 4, 5];\n\n// Get DOM elements\nconst output = document.getElementById('output');\nconst runBtn = document.getElementById('runBtn');\n\n// Function to demonstrate destructuring\nfunction demonstrateDestructuring() {\n  let result = '';\n  \n  // Your code here:\n  // 1. Destructure name and age from person\n  // 2. Destructure city and country from address\n  // 3. Destructure first two skills\n  // 4. Destructure first two numbers and rest of the array\n  \n  // Display results\n  output.textContent = result;\n}\n\n// Add click event listener\nrunBtn.addEventListener('click', demonstrateDestructuring);"
  },
  "solution": {
    "html": "<div class=\"container\">\n  <div id=\"output\" class=\"output\"></div>\n  <button id=\"runBtn\">Run Examples</button>\n</div>",
    "css": ".container {\n  padding: 2rem;\n  font-family: sans-serif;\n}\n\n.output {\n  font-family: monospace;\n  white-space: pre;\n  padding: 1rem;\n  background: #f5f5f5;\n  border-radius: 4px;\n  margin-bottom: 1rem;\n  min-height: 200px;\n  line-height: 1.5;\n  color: #333;\n}\n\nbutton {\n  padding: 0.5rem 1rem;\n  background: #007bff;\n  color: white;\n  border: none;\n  border-radius: 4px;\n  cursor: pointer;\n  font-size: 1rem;\n  transition: background-color 0.2s;\n}\n\nbutton:hover {\n  background: #0056b3;\n}",
    "js": "// Sample data\nconst person = {\n  name: 'Alice Johnson',\n  age: 28,\n  job: 'Developer',\n  address: {\n    city: 'San Francisco',\n    country: 'USA'\n  },\n  skills: ['JavaScript', 'React', 'Node.js']\n};\n\nconst numbers = [1, 2, 3, 4, 5];\n\n// Get DOM elements\nconst output = document.getElementById('output');\nconst runBtn = document.getElementById('runBtn');\n\n// Function to format value for display\nfunction formatValue(value) {\n  if (Array.isArray(value)) {\n    return `[${value.join(', ')}]`;\n  }\n  if (typeof value === 'string') {\n    return `'${value}'`;\n  }\n  return value;\n}\n\n// Function to demonstrate destructuring\nfunction demonstrateDestructuring() {\n  let result = 'Destructuring Examples:\\n\\n';\n  \n  // 1. Basic object destructuring\n  const { name, age } = person;\n  result += '1. Basic Object Destructuring:\\n';\n  result += `   const { name, age } = person;\\n`;\n  result += `   name: ${formatValue(name)}\\n`;\n  result += `   age: ${formatValue(age)}\\n\\n`;\n  \n  // 2. Nested object destructuring\n  const { address: { city, country } } = person;\n  result += '2. Nested Object Destructuring:\\n';\n  result += `   const { address: { city, country } } = person;\\n`;\n  result += `   city: ${formatValue(city)}\\n`;\n  result += `   country: ${formatValue(country)}\\n\\n`;\n  \n  // 3. Array destructuring with rest\n  const [first, second, ...rest] = numbers;\n  result += '3. Array Destructuring with Rest:\\n';\n  result += `   const [first, second, ...rest] = numbers;\\n`;\n  result += `   first: ${formatValue(first)}\\n`;\n  result += `   second: ${formatValue(second)}\\n`;\n  result += `   rest: ${formatValue(rest)}\\n\\n`;\n  \n  // 4. Array destructuring with default values\n  const [primarySkill = 'None', secondarySkill = 'None'] = person.skills;\n  result += '4. Array Destructuring with Defaults:\\n';\n  result += `   const [primarySkill = 'None', secondarySkill = 'None'] = skills;\\n`;\n  result += `   primarySkill: ${formatValue(primarySkill)}\\n`;\n  result += `   secondarySkill: ${formatValue(secondarySkill)}\\n\\n`;\n  \n  // 5. Object destructuring with renamed variables\n  const { name: fullName, job: profession = 'Unknown' } = person;\n  result += '5. Object Destructuring with Renaming:\\n';\n  result += `   const { name: fullName, job: profession } = person;\\n`;\n  result += `   fullName: ${formatValue(fullName)}\\n`;\n  result += `   profession: ${formatValue(profession)}`;\n  \n  // Display results\n  output.textContent = result;\n  console.log('Destructuring examples executed');\n}\n\n// Add click event listener\nrunBtn.addEventListener('click', demonstrateDestructuring);\n\n// Log initial state\nconsole.log('Destructuring demo initialized');"
  }
}